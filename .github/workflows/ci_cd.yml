name: CerifyNow CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  django_ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.12 ]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django tests
        run: |
          python manage.py test

  deploy_django:
    runs-on: ubuntu-latest
    needs: django_ci

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e

            # üîπ Server packages update + Python 3.12 install
            echo "üì¶ Installing server dependencies..."
            sudo apt update
            sudo apt install -y python3.12 python3.12-venv build-essential \
              libjpeg-dev zlib1g-dev libpng-dev libtiff-dev libopenjp2-7-dev

            cd /home/ubuntu
            REPO_DIR="CerifyNow"

            if [ ! -d "$REPO_DIR" ]; then
              echo "üì¶ Cloning repository..."
              git clone https://github.com/CerifyNow/CerifyNow-API-v1.git $REPO_DIR
            else
              echo "üîÑ Pulling latest changes..."
              cd $REPO_DIR
              git reset --hard
              git pull origin main
              cd ..
            fi

            cd /home/ubuntu/$REPO_DIR

            echo "üêç Creating virtual environment (if not exists)..."
            if [ ! -d "venv" ]; then
              python3.12 -m venv venv
            fi

            echo "‚öôÔ∏è Activating virtual environment..."
            source venv/bin/activate

            echo "üì¶ Installing Python dependencies..."
            pip install --upgrade pip setuptools wheel
            pip install -r requirements.txt

            echo "üß¨ Applying migrations..."
            python manage.py migrate --noinput

            echo "üé® Collecting static files..."
            python manage.py collectstatic --noinput

            echo "üöÄ Restarting Django service..."
            sudo systemctl daemon-reload
            sudo systemctl restart cerifynow.service

            echo "‚úÖ Deployment complete!"